    'CR1000 Series Datalogger
'
'date: 04 April 2013
'program author: Sarah Waldo
' This program is designed for the auxiliary CR1000 datalogger to run the solenoid valves, in 
' order to prevent corruption of the LI6262 CO2 signal by electronic noise. This program simply 
' uses "PortSet" to turn the solenoids off and on. The interval can be easily switched if 
' needed, for example to integrate taking measurements off of a chamber. 
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


'''''''''' SETTINGS '''''''''''
ConstTable
  Const TOGGLE_TIME = 4*60    'duration between switching sampling sources, seconds
  Const USE_3_LEVELS = False  'set true for three-level sampling
  
  Const STATS_INTV = 30       'time interval of statistics output, minutes

'' 0-495 ppb over 100-5000 mV 
'   slope of 0.05 ppb/mV with offset of -5 ppb @ 0mV
'    --> voltage divider
'   slope of 0.05 ppb/mV with offset of -2.5 ppb @ 0mV
  Const DF1_MULT = 0.05 
  Const DF1_OFF = -2.5
  
  Const DF2_MULT = 0.05
  Const DF2_OFF = -2.5  
EndConstTable


'''''''''' WIRING ''''''''''
Const DF1_IO = 1 'DF1
Const DF2_IO = 2 'DF2

Const VALVE_1_CTRL = 7   'C7
' Valve 1 controls selection of bottom- or top-level sampling lines
'   Normally Open ---------- Bottom level (closest to ground) inlet
'   Normally Closed -------- Top level (farthest from fround) inlet
'   Common ----------------- EITHER (a) to analyzer delivery 
'                                   (b) Valve #2 NO
Const VALVE_2_CTRL = 8   'C8
' Valve 2 controls selection of mid-level sampling line or other valve (top/btm lines)
'   Normally Open ---------- Valve #1 Common 
'   Normally Closed -------- Middle level (between bottom, top) inlet
'   Common ----------------- To analyzer delivery


'''''''''' CONSTANTS '''''''''''
Const INTEG = 250


'''''''''' VARIABLES '''''''''''

'measurements from DF1, DF2
Public raw(2) 
Alias raw(1) = ch1_value
Alias raw(2) = ch2_value

'level-partitioned readings of DF1, DF2
Public conc(6)
Alias conc(1) = ch1_top
Alias conc(2) = ch1_mid
Alias conc(3) = ch1_btm
Alias conc(4) = ch2_top
Alias conc(5) = ch2_mid
Alias conc(6) = ch2_btm

'data logger built-in sensors
Public PTemp, batt_volt

'level-selection valve control
' TODO Dim these variables ? 
Public valve_on(2) As Boolean
Alias valve_on(1) = is_sampling_top 'else bottom
Alias valve_on(2) = is_sampling_mid 'else top or bottom


'''''''''' DATA TABLES '''''''''''
DataTable (Gradient_solenoid,1,-1)
	DataInterval (0,1,Sec,1)
  CardOut(1,-1)
	Sample(1,batt_volt,FP2)
	Sample(1,PTemp,FP2)

	Sample(1,is_sampling_top, Boolean)
	Sample(1,is_sampling_mid, Boolean)

  Sample(1,ch1_value,IEEE4)
  Sample(1,ch2_value,IEEE4)
  'other measurements here
EndTable

DataTable(Gradient_stats,1,-1)
  DataInterval(0,STATS_INTV,Min,10)
  CardOut(1,-1)
  Average(1,ch1_top,IEEE4,ch1_top=NAN)
  StdDev(1,ch1_top,FP2,ch1_top=NAN)
  Average(1,ch1_mid,IEEE4,ch1_mid=NAN)
  StdDev(1,ch1_mid,FP2,ch1_mid=NAN)
  Average(1,ch1_btm,IEEE4,ch1_btm=NAN)
  StdDev(1,ch1_btm,FP2,ch1_btm=NAN)
  
  Average(1,ch2_top,IEEE4,ch2_top=NAN)
  StdDev(1,ch2_top,FP2,ch2_top=NAN)
  Average(1,ch2_mid,IEEE4,ch2_mid=NAN)
  StdDev(1,ch2_mid,FP2,ch2_top=NAN)
  Average(1,ch2_btm,IEEE4,ch2_btm=NAN)
  StdDev(1,ch2_btm,FP2,ch2_btm=NAN)
EndTable


'''''''''' MAIN PROGRAM ''''''''''
BeginProg
  is_sampling_top = False
  is_sampling_mid = False
  
	Scan (1,Sec,0,0)
  
    VoltDiff(ch1_value,1,mv5000,DF1_IO,1,0,INTEG,DF1_MULT,DF1_OFF)
    VoltDiff(ch2_value,1,mv5000,DF2_IO,1,0,INTEG,DF2_MULT,DF2_OFF)

		PanelTemp (PTemp,INTEG)
		Battery (batt_volt)

    If ( TimeIntoInterval(0,TOGGLE_TIME,Sec)) Then 
      If (USE_3_LEVELS) Then
        If (is_sampling_mid) Then
          is_sampling_top = True
          is_sampling_mid = False
        ElseIf (is_sampling_top) Then
          is_sampling_top = False
          'is_sampling_mid should still be False
        Else
          'is_sampling_top should still be False
          is_sampling_mid = True
        EndIf
      Else 'FOR ONLY TWO LEVELS
        is_sampling_top = NOT is_sampling_top
        'is_sampling_mid is always False
      EndIf
      PortSet(VALVE_1_CTRL, is_sampling_top)
      PortSet(VALVE_2_CTRL, is_sampling_mid)
      Move(conc(1),6,NAN,1)
    EndIf

    'record measurements into correct level variable set
    'other variables are set to NAN during source level transition
    If (is_sampling_mid) Then
      ch1_mid = ch1_value
      ch2_mid = ch2_value
    ElseIf (is_sampling_top) Then
      ch1_top = ch1_value
      ch2_top = ch2_value
    Else
      ch1_btm = ch1_value
      ch2_btm = ch2_value
    EndIf
       
		CallTable Gradient_solenoid
		CallTable Gradient_stats
	NextScan
EndProg


